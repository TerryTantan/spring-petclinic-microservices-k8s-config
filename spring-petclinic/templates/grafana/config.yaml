# ConfigMap for datasources
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource-config
  namespace: {{ required "A namespace must be provided" .Values.namespace }}
  labels:
    app: grafana
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        jsonData:
          timeInterval: "5s"
          tlsSkipVerify: true
          httpMethod: POST
        secureJsonData:
          tlsCACert: ""
          tlsClientCert: ""
          tlsClientKey: ""
      - name: Loki
        type: loki
        access: proxy
        url: http://loki.{{ .Values.namespace }}.svc.cluster.local:3100
        isDefault: false

---
# ConfigMap for dashboards
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-config
  namespace: {{ required "A namespace must be provided" .Values.namespace }}
  labels:
    app: grafana
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards

---
# Dashboard
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-spring-petclinic
  namespace: {{ required "A namespace must be provided" .Values.namespace }}
  labels:
    app: grafana
data:
  spring-petclinic-dashboard.json: |
    {
      "id": null,
      "uid": "node-exporter",
      "title": "Node Exporter Full",
      "tags": [ "node-exporter" ],
      "timezone": "browser",
      "schemaVersion": 16,
      "version": 1,
      "panels": [
        {
          "type": "timeseries",
          "title": "CPU Usage",
          "targets": [
            {
              "expr": "100 - (avg by(instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
              "legendFormat": "{{`{{instance}}`}}",
              "refId": "A"
            }
          ]
        }
      ]
    }
